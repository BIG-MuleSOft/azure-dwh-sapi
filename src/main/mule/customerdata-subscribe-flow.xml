<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd">
	
	<flow name="customer-subscriberFlow" doc:id="6b360266-ef9b-4fdc-b132-05c65af96b92" >
		<jms:listener doc:name="Customer Queue" doc:id="ff7f1226-7e57-4246-b21f-2ad5d0b3894b" config-ref="JMS_Config" destination="${activemq.customerQueue}" inboundContentType="application/json">
			<jms:consumer-type >
				<jms:queue-consumer />
			</jms:consumer-type>
		</jms:listener>
		<json-logger:logger doc:name="After Subscriber" doc:id="59ac6c51-c5c8-401e-86dd-e55ca72a893f" config-ref="JSON_Logger_Config" message="message consumed from a customer queue">
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
     
}]]]></json-logger:content>
		</json-logger:logger>
		<ee:transform doc:name="Set Batchrun &amp; JSON Payload" doc:id="3f2816a3-ab27-47fe-b48c-ef0478c85271">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="vBatchrun" ><![CDATA[%dw 2.0
output application/java
---
attributes.properties.userProperties.batchRuntime]]></ee:set-variable>
				<ee:set-variable variableName="vBatchkey" ><![CDATA[%dw 2.0
output application/java
---
attributes.properties.userProperties.batchNo]]></ee:set-variable>
				<ee:set-variable variableName="startTime" ><![CDATA[%dw 2.0
output application/java
---
now()]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<flow-ref doc:name="customerdata-subscribe-batch-processingSub_Flow" doc:id="c5b157fd-0fa3-4b44-ba4f-a51f1fa47923" name="customerdata-subscribe-batch-processingSub_Flow" />
		<json-logger:logger doc:name="End Logger" doc:id="31cc118f-3d91-406e-a925-2108bf7fa229" config-ref="JSON_Logger_Config" message="Customer Data succesfully excuted" tracePoint="END">
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
     
}]]]></json-logger:content>
		</json-logger:logger>
	</flow>
	<flow name="customerdata-subscribe-batch-processingSub_Flow" doc:id="571492ad-9e39-4f62-b4ce-f5badc984a0c" initialState="started">
		<ee:transform doc:name="Total Records" doc:id="1ea6cb6e-8a0b-48b3-ab78-355e41b50e8b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="startTime" ><![CDATA[%dw 2.0
output application/java
---
now()]]></ee:set-variable>
			</ee:variables>
		
</ee:transform>
		<batch:job jobName="customerdata-subscribe-flowBatch_Job" doc:id="d6ebcba7-1f7c-44e1-bf26-8944d720cd5d" maxFailedRecords="100">
			<batch:process-records >
				<batch:step name="SuccessRecords" doc:id="6c56cee8-79f4-4c5e-9067-12797af66aed" acceptPolicy="ALL">
					<ee:transform doc:name="Mapping" doc:id="5b2dfaa1-4dce-4282-bd72-30168700a4d2" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
        "CustomerId": payload.CUSTID,
        "CustomerName": payload.CUSTN,
        "CustomerLocation": payload.CUSTL,
        "CustomerStatus": payload.CUSTST,
        "CustomerSubscription": payload.CUSTME,
        "CustomerPriority": payload.CUSTPRT,
        "CustomerIndustry": payload.CUSTIND,
        "CustomerStartDate": payload.CUSTSUBDATE
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<batch:aggregator doc:name="Batch Aggregator" doc:id="1845dfa4-37e2-4e55-a0a2-7200c884e612" size="50">
						<ee:transform doc:name="To JSON" doc:id="d784e4bb-3147-45bb-82b9-d5610746288e" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<db:bulk-insert doc:name="Azure DWH" doc:id="0c7785fc-6e06-4b70-8d9a-058718811fb2" config-ref="Azure_DWH_Database_Config">
							<db:sql ><![CDATA[INSERT INTO [dbo].[Customer]([CustomerId],[CustomerName],[CustomerLocation],[CustomerStatus],[CustomerSubscription],[CustomerPriority],[CustomerIndustry],[CustomerStartDate])
VALUES (:CustomerId,:CustomerName,:CustomerLocation,:CustomerStatus,:CustomerSubscription,:CustomerPriority,:CustomerIndustry,:CustomerStartDate)]]></db:sql>
						</db:bulk-insert>
					</batch:aggregator>
				
</batch:step>
				<batch:step name="FailureRecords" doc:id="775884f8-5874-424d-a64e-1aa59de1bea4" acceptPolicy="ONLY_FAILURES">
					<ee:transform doc:name="Failed Records" doc:id="981b07c9-e883-49f4-b71b-c020a16ec0bc" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<batch:aggregator doc:name="Batch Aggregator" doc:id="e841d059-51a9-4075-911c-24a8e6230fb9" size="50">
						<ee:transform doc:name="To JSON" doc:id="b5365eaf-cadb-4873-8cdc-dc58534b2167">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
						</ee:message>
					</ee:transform>
						<jms:publish doc:name="Failure Records Published to Customer-Reprocessing-Queue" doc:id="da103758-c1d3-4d6c-91a1-9cb697a59cec" config-ref="JMS_Config" destination="${activemq.reprocessingCustomerQueue}" >
							<jms:message >
								<jms:properties ><![CDATA[#[{
	"batchRuntime": vars.vBatchrun,
	"batchkey": vars.vBatchkey
}]]]></jms:properties>
							</jms:message>
						</jms:publish>
					</batch:aggregator>
				
</batch:step>
			</batch:process-records>
			<batch:on-complete >
				<ee:transform doc:name="Flow Runtime(seconds)" doc:id="e05c74ad-89bc-4aa4-a37d-c1a5d6d22e8e" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="flowruntime" ><![CDATA[%dw 2.0
import * from dw::util::Coercions
output application/java
---
{
	"processingTime": toNumber((now() - vars.startTime), "seconds")
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<choice doc:name="Check Success/Failure Records" doc:id="3233c1b6-cc2e-4653-a2f6-4c074bae89a4" >
					<when expression="#[payload.loadedRecords == payload.successfulRecords]">
						<ee:transform doc:name="Completed" doc:id="74db9821-1591-4f03-937b-e0b9307c552f" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
    "totalrecord": payload.loadedRecords,
    "batchrun": vars.vBatchrun,
    "totalsuccessrecord": payload.successfulRecords,
    "sourcedatatype": "Customer",
    "totalfailedrrecord": payload.failedRecords,
    "status": "Completed",
    "phase": "DHW",
    "batchkey": vars.vBatchkey,
    "flowruntime": vars.flowruntime.processingTime 
 }]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<db:insert doc:name="Insert Status to Common Trace Table" doc:id="e4de1bee-c7b9-462d-9607-7064cc1ea7bf" config-ref="Postgres_Database_Config">
							<db:sql ><![CDATA[INSERT INTO public.commontrace(sourcedatatype,batchrun,totalrecord,totalsuccessrecord,totalfailedrrecord,status,phase,batchkey,flowruntime)
VALUES ('Customer',:batchrun,:totalrecord,:totalsuccessrecord,:totalfailedrrecord,'Completed','DHW',:batchkey,:flowruntime);]]></db:sql>
							<db:input-parameters ><![CDATA[#[output application/json
---
payload]]]></db:input-parameters>
						</db:insert>
					</when>
					<otherwise >
						<ee:transform doc:name="Failed-DWH" doc:id="b8a719c1-5416-4c32-b06c-842b9b234e35" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
    "totalrecord": payload.loadedRecords,
    "batchrun": vars.vBatchrun,
    "totalsuccessrecord": payload.successfulRecords,
    "sourcedatatype": "Customer",
    "totalfailedrrecord": payload.failedRecords,
    "status": "Failed-DWH",
    "phase": "DHW",
    "batchkey": vars.vBatchkey,
    "flowruntime": vars.flowruntime.processingTime
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<db:insert doc:name="Insert Status to Common Trace Table" doc:id="f8c3f8b2-712e-4bca-9dd8-425e7ee28571" config-ref="Postgres_Database_Config">
							<db:sql ><![CDATA[INSERT INTO public.commontrace(sourcedatatype,batchrun,totalrecord,totalsuccessrecord,totalfailedrrecord,status,phase,batchkey,flowruntime)
VALUES ('Customer',:batchrun,:totalrecord,:totalsuccessrecord,:totalfailedrrecord,'Failed-DWH','DHW',:batchkey,:flowruntime)]]></db:sql>
							<db:input-parameters ><![CDATA[#[output application/json
---
payload]]]></db:input-parameters>
						</db:insert>
					</otherwise>
				</choice>
				<json-logger:logger doc:name="Insert Status" doc:id="0bd7ee20-576a-49c5-b5da-741518c576ce" config-ref="JSON_Logger_Config" tracePoint="AFTER_TRANSFORM" message="Insert Status to CommonTrace Table">
					<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
   
}]]]></json-logger:content>
				</json-logger:logger>
			
</batch:on-complete>
		</batch:job>
	</flow>
</mule>
